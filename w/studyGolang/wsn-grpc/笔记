
https://blog.csdn.net/wongcony/article/details/79288003?utm_source=blogxgwz6



grpc 四种简单的模式

1. 简单模式 : 只是使用参数和返回值作为服务器与客户端传递数据的方式

2.客户端流模式 : 从客户端往服务器端发送数据使用的是流,即服务器端的参数为流类型,然而服务器响应之后,返回数据给客户端,使用的也是流的send方式.
            (原文:即从客户端往服务器端发送数据使用的是流，即服务器端的参数为流类型，然而在服务器相应后返还数据给客户端，使用的也是流的send方法。一般在服务器端的代码，需要先recv再send，而客户端与此相反。但是在后面的双向模式中可以使用go的协程协作。)

3.服务器端流模式 : 服务器端返回的数据,使用的是流模式.数据的传入是使用参数方式
            (原文:服务器端返回结果的时候使用的是流模式，即传入的数据是通过参数形式传入的。但是在往客户端发送数据时使用send方法，与客户端返回数据的方式大同小异。)

4. 双向模式:客户端如果不使用协程,那么发送必须在接受之前,但是如果使用协程,发送和接受没有先后顺序.为了保证协程的同步,可以使用互斥量进行约束
